{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/NEXT.js/src/app/services/api.js"],"sourcesContent":["\r\n\r\nexport  const API_BASE_URL = \"https://jsonplaceholder.typicode.com\";\r\n\r\n// export const fetchUsers = async () => {\r\n//   try {\r\n//     const response = await axios.get(`${API_BASE_URL}/users`);\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     throw new Error(\"Failed to fetch users\",error);\r\n//   }\r\n// };\r\n\r\n// export const fetchUserPosts = async (userId) => {\r\n//   try {\r\n//     const response = await axios.get(`${API_BASE_URL}/posts?userId=${userId}`);\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     throw new Error(\"Failed to fetch posts\",error);\r\n//   }\r\n// };\r\n"],"names":[],"mappings":";;;AAEQ,MAAM,eAAe,wCAE7B,0CAA0C;CAC1C,UAAU;CACV,iEAAiE;CACjE,4BAA4B;CAC5B,sBAAsB;CACtB,sDAAsD;CACtD,MAAM;CACN,KAAK;CAEL,oDAAoD;CACpD,UAAU;CACV,kFAAkF;CAClF,4BAA4B;CAC5B,sBAAsB;CACtB,sDAAsD;CACtD,MAAM;CACN,KAAK"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file://D%3A/NEXT.js/src/app/services/globalstate.js"],"sourcesContent":["import { create } from \"zustand\";\r\nimport axios from \"axios\";\r\nimport {API_BASE_URL} from './api.js'\r\n\r\nexport const useGlobalState = create((set) => ({\r\n  users: [], \r\n  posts: [], \r\n  error: null,\r\n  loading: false,\r\n\r\n \r\n  fetchingUsers: async () => {\r\n    set({ loading: true });\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/users`);\r\n      set({ users: response.data, loading: false });\r\n    } catch (error) {\r\n      set({ error: \"Failed to fetch users\", loading: false });\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  },\r\n\r\n  // Fetch posts of a specific user\r\n  fetchingUserPosts: async (userId) => {\r\n    set({ loading: true });\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/posts?userId=${userId}`);\r\n      set({ posts: response.data, loading: false });\r\n    } catch (error) {\r\n      set({ error: \"Failed to fetch posts\", loading: false });\r\n      console.error(`Error fetching posts for user ${userId}:`, error);\r\n    }\r\n  },\r\n}));\r\n"],"names":[],"mappings":";;;AAEA;AAFA;AACA;;;;AAGO,MAAM,iBAAiB,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAD,EAAE,CAAC,MAAQ,CAAC;QAC7C,OAAO,EAAE;QACT,OAAO,EAAE;QACT,OAAO;QACP,SAAS;QAGT,eAAe;YACb,IAAI;gBAAE,SAAS;YAAK;YACpB,IAAI;gBACF,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,gIAAA,CAAA,eAAY,CAAC,MAAM,CAAC;gBACxD,IAAI;oBAAE,OAAO,SAAS,IAAI;oBAAE,SAAS;gBAAM;YAC7C,EAAE,OAAO,OAAO;gBACd,IAAI;oBAAE,OAAO;oBAAyB,SAAS;gBAAM;gBACrD,QAAQ,KAAK,CAAC,yBAAyB;YACzC;QACF;QAEA,iCAAiC;QACjC,mBAAmB,OAAO;YACxB,IAAI;gBAAE,SAAS;YAAK;YACpB,IAAI;gBACF,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,gIAAA,CAAA,eAAY,CAAC,cAAc,EAAE,QAAQ;gBACzE,IAAI;oBAAE,OAAO,SAAS,IAAI;oBAAE,SAAS;gBAAM;YAC7C,EAAE,OAAO,OAAO;gBACd,IAAI;oBAAE,OAAO;oBAAyB,SAAS;gBAAM;gBACrD,QAAQ,KAAK,CAAC,CAAC,8BAA8B,EAAE,OAAO,CAAC,CAAC,EAAE;YAC5D;QACF;IACF,CAAC"}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file://D%3A/NEXT.js/src/app/users/%5Bid%5D/page.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"next/navigation\";\r\nimport Link from \"next/link\";\r\nimport { useGlobalState } from \"../../services/globalstate\";\r\n\r\nexport default function UserPostsPage() {\r\n  const { id } = useParams(); // Get user ID from URL\r\n  const { users, posts, loading, error, fetchingUserPosts,fetchingUsers } = useGlobalState();\r\n\r\n  // Fetch users list on mount (only if not already fetched)\r\n  // useEffect(() => {\r\n  //   if (users.length === 0) fetchingUsers();\r\n  // }, []);\r\n\r\n  // Fetch user posts when `id` changes\r\n  useEffect(() => {\r\n    fetchingUserPosts(id);\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (!users || users.length === 0) {\r\n      fetchingUsers();\r\n    }\r\n  }, []);\r\n\r\n  // Find the selected user from global state\r\n  const selectedUser = users.find((user) => user.id === Number(id));\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4 bg-gradient-to-r from-[#041b40] to-[#070708] \">\r\n     \r\n\r\n      <Link href='/' className=\"text-blue-500 underline\">\r\n                    <button className=\"mt-4 px-4 py-2 bg-[#033a91] text-white rounded-md hover:bg-blue-600\">\r\n                      Back To Dashboard \r\n                    </button>\r\n                  </Link>\r\n\r\n      <h1 className=\"text-2xl font-bold my-4 text-white\">\r\n        Posts by {selectedUser ? selectedUser.name : \"User\"}\r\n      </h1>\r\n\r\n      {loading ? (\r\n        <p>Loading posts...</p>\r\n      ) : error ? (\r\n        <p className=\"text-red-500\">{error}</p>\r\n      ) : posts.length > 0 ? (\r\n        <ul className=\"mt-2\">\r\n          {posts.map((post) => (\r\n            <li key={post.id} className=\"border p-2 rounded-lg mb-2 bg-black\">\r\n              <h3 className=\"font-semibold text-white\">{post.title}</h3>\r\n              <p className=\"text-gray-400\">{post.body}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No posts found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAOe,SAAS;;IACtB,MAAM,EAAE,EAAE,EAAE,GAAG,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD,KAAK,uBAAuB;IACnD,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,iBAAiB,EAAC,aAAa,EAAE,GAAG,CAAA,GAAA,wIAAA,CAAA,iBAAc,AAAD;IAEvF,0DAA0D;IAC1D,oBAAoB;IACpB,6CAA6C;IAC7C,UAAU;IAEV,qCAAqC;IACrC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,kBAAkB;QACpB;kCAAG;QAAC;KAAG;IAEP,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,IAAI,CAAC,SAAS,MAAM,MAAM,KAAK,GAAG;gBAChC;YACF;QACF;kCAAG,EAAE;IAEL,2CAA2C;IAC3C,MAAM,eAAe,MAAM,IAAI,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK,OAAO;IAE7D,qBACE,6LAAC;QAAI,WAAU;;0BAGb,6LAAC,+JAAA,CAAA,UAAI;gBAAC,MAAK;gBAAI,WAAU;0BACX,cAAA,6LAAC;oBAAO,WAAU;8BAAsE;;;;;;;;;;;0BAKtG,6LAAC;gBAAG,WAAU;;oBAAqC;oBACvC,eAAe,aAAa,IAAI,GAAG;;;;;;;YAG9C,wBACC,6LAAC;0BAAE;;;;;uBACD,sBACF,6LAAC;gBAAE,WAAU;0BAAgB;;;;;uBAC3B,MAAM,MAAM,GAAG,kBACjB,6LAAC;gBAAG,WAAU;0BACX,MAAM,GAAG,CAAC,CAAC,qBACV,6LAAC;wBAAiB,WAAU;;0CAC1B,6LAAC;gCAAG,WAAU;0CAA4B,KAAK,KAAK;;;;;;0CACpD,6LAAC;gCAAE,WAAU;0CAAiB,KAAK,IAAI;;;;;;;uBAFhC,KAAK,EAAE;;;;;;;;;qCAOpB,6LAAC;0BAAE;;;;;;;;;;;;AAIX;GAvDwB;;QACP,qIAAA,CAAA,YAAS;QACkD,wIAAA,CAAA,iBAAc;;;KAFlE"}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}