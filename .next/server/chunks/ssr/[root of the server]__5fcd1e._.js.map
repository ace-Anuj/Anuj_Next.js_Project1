{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://D%3A/React-Native-Project/Next/next-project/src/app/services/globalstate.js"],"sourcesContent":["import { create } from \"zustand\";\r\nimport axios from \"axios\";\r\nimport {API_BASE_URL} from './api.j'\r\n\r\nexport const useGlobalState = create((set) => ({\r\n  users: [], \r\n  posts: [], \r\n  error: null,\r\n  loading: false,\r\n\r\n \r\n  fetchingUsers: async () => {\r\n    set({ loading: true });\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/users`);\r\n      set({ users: response.data, loading: false });\r\n    } catch (error) {\r\n      set({ error: \"Failed to fetch users\", loading: false });\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  },\r\n\r\n  // Fetch posts of a specific user\r\n  fetchingUserPosts: async (userId) => {\r\n    set({ loading: true });\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/posts?userId=${userId}`);\r\n      set({ posts: response.data, loading: false });\r\n    } catch (error) {\r\n      set({ error: \"Failed to fetch posts\", loading: false });\r\n      console.error(`Error fetching posts for user ${userId}:`, error);\r\n    }\r\n  },\r\n}));\r\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;;;;AAGO,MAAM,iBAAiB,CAAA,GAAA,wIAAA,CAAA,SAAM,AAAD,EAAE,CAAC,MAAQ,CAAC;QAC7C,OAAO,EAAE;QACT,OAAO,EAAE;QACT,OAAO;QACP,SAAS;QAGT,eAAe;YACb,IAAI;gBAAE,SAAS;YAAK;YACpB,IAAI;gBACF,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,aAAa,MAAM,CAAC;gBACxD,IAAI;oBAAE,OAAO,SAAS,IAAI;oBAAE,SAAS;gBAAM;YAC7C,EAAE,OAAO,OAAO;gBACd,IAAI;oBAAE,OAAO;oBAAyB,SAAS;gBAAM;gBACrD,QAAQ,KAAK,CAAC,yBAAyB;YACzC;QACF;QAEA,iCAAiC;QACjC,mBAAmB,OAAO;YACxB,IAAI;gBAAE,SAAS;YAAK;YACpB,IAAI;gBACF,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,aAAa,cAAc,EAAE,QAAQ;gBACzE,IAAI;oBAAE,OAAO,SAAS,IAAI;oBAAE,SAAS;gBAAM;YAC7C,EAAE,OAAO,OAAO;gBACd,IAAI;oBAAE,OAAO;oBAAyB,SAAS;gBAAM;gBACrD,QAAQ,KAAK,CAAC,CAAC,8BAA8B,EAAE,OAAO,CAAC,CAAC,EAAE;YAC5D;QACF;IACF,CAAC"}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file://D%3A/React-Native-Project/Next/next-project/src/app/users/page.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { useGlobalState } from \"../services/globalstate\"; // Import Zustand store\r\n\r\nexport default function Dashboard() {\r\n  // Extract global state & actions\r\n  const { users, loading, error, fetchingUsers } = useGlobalState();\r\n\r\n  // Fetch users when component mounts (if not already loaded)\r\n  useEffect(() => {\r\n    if (users.length === 0) {\r\n      fetchingUsers();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">User Dashboard</h1>\r\n\r\n      {loading ? (\r\n        <p>Loading users...</p>\r\n      ) : error ? (\r\n        <p className=\"text-red-500\">{error}</p>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          {users.map((user) => (\r\n            <div\r\n              key={user.id}\r\n              className=\"border p-4 rounded-lg cursor-pointer hover:bg-gray-100\"\r\n            >\r\n              <h2 className=\"font-bold\">{user.name}</h2>\r\n              <p>ID: {user.id}</p>\r\n              <p>Email: {user.email}</p>\r\n              <p>\r\n                Address: {user.address.street}, {user.address.city}\r\n              </p>\r\n              <p>Company: {user.company.name}</p>\r\n              \r\n              {/* Navigate to the user’s post page */}\r\n              <Link href={`/users/${user.id}`} className=\"text-blue-500 underline\">\r\n                View Posts →\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA,sOAA0D,uBAAuB;AAJjF;;;;;AAMe,SAAS;IACtB,iCAAiC;IACjC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD;IAE9D,4DAA4D;IAC5D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,MAAM,MAAM,KAAK,GAAG;YACtB;QACF;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;YAEvC,wBACC,8OAAC;0BAAE;;;;;uBACD,sBACF,8OAAC;gBAAE,WAAU;0BAAgB;;;;;qCAE7B,8OAAC;gBAAI,WAAU;0BACZ,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC;wBAEC,WAAU;;0CAEV,8OAAC;gCAAG,WAAU;0CAAa,KAAK,IAAI;;;;;;0CACpC,8OAAC;;oCAAE;oCAAK,KAAK,EAAE;;;;;;;0CACf,8OAAC;;oCAAE;oCAAQ,KAAK,KAAK;;;;;;;0CACrB,8OAAC;;oCAAE;oCACS,KAAK,OAAO,CAAC,MAAM;oCAAC;oCAAG,KAAK,OAAO,CAAC,IAAI;;;;;;;0CAEpD,8OAAC;;oCAAE;oCAAU,KAAK,OAAO,CAAC,IAAI;;;;;;;0CAG9B,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;gCAAE,WAAU;0CAA0B;;;;;;;uBAZhE,KAAK,EAAE;;;;;;;;;;;;;;;;AAqB1B"}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}